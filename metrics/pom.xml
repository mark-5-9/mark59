<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.3.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	
	<groupId>com.mark59</groupId>
	<artifactId>metrics</artifactId>
	<version>3.0.1</version>
	<packaging>war</packaging>

	<name>metrics (Trend Analysis)</name>

	<properties>
		<maven.compiler.target>1.8</maven.compiler.target>
		<maven.compiler.source>1.8</maven.compiler.source>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencies>

		<dependency>
			<groupId>com.mark59</groupId>
			<artifactId>mark59-core</artifactId>
			<version>3.0</version>
		</dependency>

		<!-- Spring Boot related dependencies -->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
		</dependency>

		<!-- https://github.com/spring-projects/sts4/wiki/Live-Application-Information -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Other project dependencies -->

		<dependency>
		    <groupId>org.apache.commons</groupId>
		    <artifactId>commons-lang3</artifactId>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>
		
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
        	<version>1.4.200</version><!--$NO-MVN-MAN-VER$-->
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>

		<!-- phase/goals: clean package    (** install not needed as the maven-install-plugin is set to run in the package phase) -->

		<plugins>

			<!-- spring boot maven plugin -->
			<!-- Constructs a spring boot war during the package phase. (for this 
				plugin the install phase is not relevant to the build - see Maven jar and 
				install plugins below) -->

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<finalName>${project.artifactId}</finalName>
				</configuration>
			</plugin>

			<!-- maven jar plugin and maven install plugin -->
			<!-- In conjunction, these two plugins compile the classes into a jar, 
				and then install the jar into the local repro. The jar is can then be used 
				to resolve dependencies in projects requiring classes from this war project 
				NOTE: the weird "prepare-package" phase is used in the maven jar plugin 
				(rather than "compile" or "package") to bypass an annoying eclipse error -->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<id>create-a-jar</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<executions>
					<execution>
						<id>Add-to-local-repository</id>
						<phase>package</phase>
						<configuration>
							<packaging>jar</packaging>
							<file>${project.build.directory}\${project.artifactId}.jar</file>
							<finalName>${project.artifactId}-${project.version}</finalName>
						</configuration>
						<goals>
							<goal>install-file</goal>
						</goals>
					</execution>
				</executions>
			</plugin>


		</plugins>
		<finalName>${project.artifactId}</finalName>
	</build>

</project>